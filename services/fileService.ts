import JSZip from 'jszip';
import { GraphSchema } from '../types';

const README_CONTENT = `
# Graph Schema Architect Project Package

This package was generated by the AI-powered Graph Schema Architect.
It contains the following files to help you build and populate your FalkorDB graph.

## Contents

- **schema.json**: A JSON representation of your final graph schema, including all nodes, relationships, and their properties.
- **cypher_schema.cypher**: A Cypher script containing \`GRAPH.QUERY\` commands to create indexes on the primary properties of your node labels. This is crucial for query performance.
- **import_notes.md**: Contains conceptual \`LOAD CSV\` Cypher queries to illustrate how you might import data.

## IMPORTANT: Data Import

For production environments and large datasets, FalkorDB uses a high-performance command-line utility called **'falkor-bulk-loader'**. 

The queries in \`import_notes.md\` are primarily for conceptual understanding and are not recommended for bulk loading in FalkorDB. Please refer to the official FalkorDB documentation for detailed instructions on using 'falkor-bulk-loader'.

Happy graphing!
`;

export const downloadProjectPackage = async (schema: GraphSchema, cypherScript: string, importScript: string) => {
    const zip = new JSZip();

    zip.file("schema.json", JSON.stringify(schema, null, 2));
    zip.file("cypher_schema.cypher", cypherScript);
    zip.file("import_notes.md", importScript);
    zip.file("README.md", README_CONTENT);

    try {
        const content = await zip.generateAsync({ type: "blob" });
        const url = URL.createObjectURL(content);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'GraphSchemaArchitect-Project.zip';
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
    } catch(e) {
        console.error("Error creating zip file", e);
        alert("Failed to create the download package. Please check the console for errors.");
    }
}
